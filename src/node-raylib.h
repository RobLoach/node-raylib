#ifndef NODE_RAYLIB_NODE_RAYLIB_H
#define NODE_RAYLIB_NODE_RAYLIB_H

#include <string>
#include <napi.h>

#include "raylib.h"
#include "lib/AddDefine.h"
#include "lib/AddFunction.h"

void node_raylib_bindings_defines(Napi::Env& env, Napi::Object& exports) {
  AddDefineInteger(env, exports, "FLAG_VSYNC_HINT", FLAG_VSYNC_HINT);
  AddDefineInteger(env, exports, "FLAG_FULLSCREEN_MODE", FLAG_FULLSCREEN_MODE);
  AddDefineInteger(env, exports, "FLAG_WINDOW_RESIZABLE", FLAG_WINDOW_RESIZABLE);
  AddDefineInteger(env, exports, "FLAG_WINDOW_UNDECORATED", FLAG_WINDOW_UNDECORATED);
  AddDefineInteger(env, exports, "FLAG_WINDOW_HIDDEN", FLAG_WINDOW_HIDDEN);
  AddDefineInteger(env, exports, "FLAG_WINDOW_MINIMIZED", FLAG_WINDOW_MINIMIZED);
  AddDefineInteger(env, exports, "FLAG_WINDOW_MAXIMIZED", FLAG_WINDOW_MAXIMIZED);
  AddDefineInteger(env, exports, "FLAG_WINDOW_UNFOCUSED", FLAG_WINDOW_UNFOCUSED);
  AddDefineInteger(env, exports, "FLAG_WINDOW_TOPMOST", FLAG_WINDOW_TOPMOST);
  AddDefineInteger(env, exports, "FLAG_WINDOW_ALWAYS_RUN", FLAG_WINDOW_ALWAYS_RUN);
  AddDefineInteger(env, exports, "FLAG_WINDOW_TRANSPARENT", FLAG_WINDOW_TRANSPARENT);
  AddDefineInteger(env, exports, "FLAG_WINDOW_HIGHDPI", FLAG_WINDOW_HIGHDPI);
  AddDefineInteger(env, exports, "FLAG_MSAA_4X_HINT", FLAG_MSAA_4X_HINT);
  AddDefineInteger(env, exports, "FLAG_INTERLACED_HINT", FLAG_INTERLACED_HINT);
  AddDefineInteger(env, exports, "LOG_ALL", LOG_ALL);
  AddDefineInteger(env, exports, "LOG_TRACE", LOG_TRACE);
  AddDefineInteger(env, exports, "LOG_DEBUG", LOG_DEBUG);
  AddDefineInteger(env, exports, "LOG_INFO", LOG_INFO);
  AddDefineInteger(env, exports, "LOG_WARNING", LOG_WARNING);
  AddDefineInteger(env, exports, "LOG_ERROR", LOG_ERROR);
  AddDefineInteger(env, exports, "LOG_FATAL", LOG_FATAL);
  AddDefineInteger(env, exports, "LOG_NONE", LOG_NONE);
  AddDefineInteger(env, exports, "KEY_APOSTROPHE", KEY_APOSTROPHE);
  AddDefineInteger(env, exports, "KEY_COMMA", KEY_COMMA);
  AddDefineInteger(env, exports, "KEY_MINUS", KEY_MINUS);
  AddDefineInteger(env, exports, "KEY_PERIOD", KEY_PERIOD);
  AddDefineInteger(env, exports, "KEY_SLASH", KEY_SLASH);
  AddDefineInteger(env, exports, "KEY_ZERO", KEY_ZERO);
  AddDefineInteger(env, exports, "KEY_ONE", KEY_ONE);
  AddDefineInteger(env, exports, "KEY_TWO", KEY_TWO);
  AddDefineInteger(env, exports, "KEY_THREE", KEY_THREE);
  AddDefineInteger(env, exports, "KEY_FOUR", KEY_FOUR);
  AddDefineInteger(env, exports, "KEY_FIVE", KEY_FIVE);
  AddDefineInteger(env, exports, "KEY_SIX", KEY_SIX);
  AddDefineInteger(env, exports, "KEY_SEVEN", KEY_SEVEN);
  AddDefineInteger(env, exports, "KEY_EIGHT", KEY_EIGHT);
  AddDefineInteger(env, exports, "KEY_NINE", KEY_NINE);
  AddDefineInteger(env, exports, "KEY_SEMICOLON", KEY_SEMICOLON);
  AddDefineInteger(env, exports, "KEY_EQUAL", KEY_EQUAL);
  AddDefineInteger(env, exports, "KEY_A", KEY_A);
  AddDefineInteger(env, exports, "KEY_B", KEY_B);
  AddDefineInteger(env, exports, "KEY_C", KEY_C);
  AddDefineInteger(env, exports, "KEY_D", KEY_D);
  AddDefineInteger(env, exports, "KEY_E", KEY_E);
  AddDefineInteger(env, exports, "KEY_F", KEY_F);
  AddDefineInteger(env, exports, "KEY_G", KEY_G);
  AddDefineInteger(env, exports, "KEY_H", KEY_H);
  AddDefineInteger(env, exports, "KEY_I", KEY_I);
  AddDefineInteger(env, exports, "KEY_J", KEY_J);
  AddDefineInteger(env, exports, "KEY_K", KEY_K);
  AddDefineInteger(env, exports, "KEY_L", KEY_L);
  AddDefineInteger(env, exports, "KEY_M", KEY_M);
  AddDefineInteger(env, exports, "KEY_N", KEY_N);
  AddDefineInteger(env, exports, "KEY_O", KEY_O);
  AddDefineInteger(env, exports, "KEY_P", KEY_P);
  AddDefineInteger(env, exports, "KEY_Q", KEY_Q);
  AddDefineInteger(env, exports, "KEY_R", KEY_R);
  AddDefineInteger(env, exports, "KEY_S", KEY_S);
  AddDefineInteger(env, exports, "KEY_T", KEY_T);
  AddDefineInteger(env, exports, "KEY_U", KEY_U);
  AddDefineInteger(env, exports, "KEY_V", KEY_V);
  AddDefineInteger(env, exports, "KEY_W", KEY_W);
  AddDefineInteger(env, exports, "KEY_X", KEY_X);
  AddDefineInteger(env, exports, "KEY_Y", KEY_Y);
  AddDefineInteger(env, exports, "KEY_Z", KEY_Z);
  AddDefineInteger(env, exports, "KEY_SPACE", KEY_SPACE);
  AddDefineInteger(env, exports, "KEY_ESCAPE", KEY_ESCAPE);
  AddDefineInteger(env, exports, "KEY_ENTER", KEY_ENTER);
  AddDefineInteger(env, exports, "KEY_TAB", KEY_TAB);
  AddDefineInteger(env, exports, "KEY_BACKSPACE", KEY_BACKSPACE);
  AddDefineInteger(env, exports, "KEY_INSERT", KEY_INSERT);
  AddDefineInteger(env, exports, "KEY_DELETE", KEY_DELETE);
  AddDefineInteger(env, exports, "KEY_RIGHT", KEY_RIGHT);
  AddDefineInteger(env, exports, "KEY_LEFT", KEY_LEFT);
  AddDefineInteger(env, exports, "KEY_DOWN", KEY_DOWN);
  AddDefineInteger(env, exports, "KEY_UP", KEY_UP);
  AddDefineInteger(env, exports, "KEY_PAGE_UP", KEY_PAGE_UP);
  AddDefineInteger(env, exports, "KEY_PAGE_DOWN", KEY_PAGE_DOWN);
  AddDefineInteger(env, exports, "KEY_HOME", KEY_HOME);
  AddDefineInteger(env, exports, "KEY_END", KEY_END);
  AddDefineInteger(env, exports, "KEY_CAPS_LOCK", KEY_CAPS_LOCK);
  AddDefineInteger(env, exports, "KEY_SCROLL_LOCK", KEY_SCROLL_LOCK);
  AddDefineInteger(env, exports, "KEY_NUM_LOCK", KEY_NUM_LOCK);
  AddDefineInteger(env, exports, "KEY_PRINT_SCREEN", KEY_PRINT_SCREEN);
  AddDefineInteger(env, exports, "KEY_PAUSE", KEY_PAUSE);
  AddDefineInteger(env, exports, "KEY_F1", KEY_F1);
  AddDefineInteger(env, exports, "KEY_F2", KEY_F2);
  AddDefineInteger(env, exports, "KEY_F3", KEY_F3);
  AddDefineInteger(env, exports, "KEY_F4", KEY_F4);
  AddDefineInteger(env, exports, "KEY_F5", KEY_F5);
  AddDefineInteger(env, exports, "KEY_F6", KEY_F6);
  AddDefineInteger(env, exports, "KEY_F7", KEY_F7);
  AddDefineInteger(env, exports, "KEY_F8", KEY_F8);
  AddDefineInteger(env, exports, "KEY_F9", KEY_F9);
  AddDefineInteger(env, exports, "KEY_F10", KEY_F10);
  AddDefineInteger(env, exports, "KEY_F11", KEY_F11);
  AddDefineInteger(env, exports, "KEY_F12", KEY_F12);
  AddDefineInteger(env, exports, "KEY_LEFT_SHIFT", KEY_LEFT_SHIFT);
  AddDefineInteger(env, exports, "KEY_LEFT_CONTROL", KEY_LEFT_CONTROL);
  AddDefineInteger(env, exports, "KEY_LEFT_ALT", KEY_LEFT_ALT);
  AddDefineInteger(env, exports, "KEY_LEFT_SUPER", KEY_LEFT_SUPER);
  AddDefineInteger(env, exports, "KEY_RIGHT_SHIFT", KEY_RIGHT_SHIFT);
  AddDefineInteger(env, exports, "KEY_RIGHT_CONTROL", KEY_RIGHT_CONTROL);
  AddDefineInteger(env, exports, "KEY_RIGHT_ALT", KEY_RIGHT_ALT);
  AddDefineInteger(env, exports, "KEY_RIGHT_SUPER", KEY_RIGHT_SUPER);
  AddDefineInteger(env, exports, "KEY_KB_MENU", KEY_KB_MENU);
  AddDefineInteger(env, exports, "KEY_LEFT_BRACKET", KEY_LEFT_BRACKET);
  AddDefineInteger(env, exports, "KEY_BACKSLASH", KEY_BACKSLASH);
  AddDefineInteger(env, exports, "KEY_RIGHT_BRACKET", KEY_RIGHT_BRACKET);
  AddDefineInteger(env, exports, "KEY_GRAVE", KEY_GRAVE);
  AddDefineInteger(env, exports, "KEY_KP_0", KEY_KP_0);
  AddDefineInteger(env, exports, "KEY_KP_1", KEY_KP_1);
  AddDefineInteger(env, exports, "KEY_KP_2", KEY_KP_2);
  AddDefineInteger(env, exports, "KEY_KP_3", KEY_KP_3);
  AddDefineInteger(env, exports, "KEY_KP_4", KEY_KP_4);
  AddDefineInteger(env, exports, "KEY_KP_5", KEY_KP_5);
  AddDefineInteger(env, exports, "KEY_KP_6", KEY_KP_6);
  AddDefineInteger(env, exports, "KEY_KP_7", KEY_KP_7);
  AddDefineInteger(env, exports, "KEY_KP_8", KEY_KP_8);
  AddDefineInteger(env, exports, "KEY_KP_9", KEY_KP_9);
  AddDefineInteger(env, exports, "KEY_KP_DECIMAL", KEY_KP_DECIMAL);
  AddDefineInteger(env, exports, "KEY_KP_DIVIDE", KEY_KP_DIVIDE);
  AddDefineInteger(env, exports, "KEY_KP_MULTIPLY", KEY_KP_MULTIPLY);
  AddDefineInteger(env, exports, "KEY_KP_SUBTRACT", KEY_KP_SUBTRACT);
  AddDefineInteger(env, exports, "KEY_KP_ADD", KEY_KP_ADD);
  AddDefineInteger(env, exports, "KEY_KP_ENTER", KEY_KP_ENTER);
  AddDefineInteger(env, exports, "KEY_KP_EQUAL", KEY_KP_EQUAL);
  AddDefineInteger(env, exports, "KEY_BACK", KEY_BACK);
  AddDefineInteger(env, exports, "KEY_MENU", KEY_MENU);
  AddDefineInteger(env, exports, "KEY_VOLUME_UP", KEY_VOLUME_UP);
  AddDefineInteger(env, exports, "KEY_VOLUME_DOWN", KEY_VOLUME_DOWN);
  AddDefineInteger(env, exports, "MOUSE_LEFT_BUTTON", MOUSE_LEFT_BUTTON);
  AddDefineInteger(env, exports, "MOUSE_RIGHT_BUTTON", MOUSE_RIGHT_BUTTON);
  AddDefineInteger(env, exports, "MOUSE_MIDDLE_BUTTON", MOUSE_MIDDLE_BUTTON);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_DEFAULT", MOUSE_CURSOR_DEFAULT);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_ARROW", MOUSE_CURSOR_ARROW);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_IBEAM", MOUSE_CURSOR_IBEAM);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_CROSSHAIR", MOUSE_CURSOR_CROSSHAIR);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_POINTING_HAND", MOUSE_CURSOR_POINTING_HAND);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_RESIZE_EW", MOUSE_CURSOR_RESIZE_EW);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_RESIZE_NS", MOUSE_CURSOR_RESIZE_NS);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_RESIZE_NWSE", MOUSE_CURSOR_RESIZE_NWSE);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_RESIZE_NESW", MOUSE_CURSOR_RESIZE_NESW);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_RESIZE_ALL", MOUSE_CURSOR_RESIZE_ALL);
  AddDefineInteger(env, exports, "MOUSE_CURSOR_NOT_ALLOWED", MOUSE_CURSOR_NOT_ALLOWED);
  AddDefineInteger(env, exports, "GAMEPAD_PLAYER1", GAMEPAD_PLAYER1);
  AddDefineInteger(env, exports, "GAMEPAD_PLAYER2", GAMEPAD_PLAYER2);
  AddDefineInteger(env, exports, "GAMEPAD_PLAYER3", GAMEPAD_PLAYER3);
  AddDefineInteger(env, exports, "GAMEPAD_PLAYER4", GAMEPAD_PLAYER4);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_UNKNOWN", GAMEPAD_BUTTON_UNKNOWN);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_FACE_UP", GAMEPAD_BUTTON_LEFT_FACE_UP);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_FACE_RIGHT", GAMEPAD_BUTTON_LEFT_FACE_RIGHT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_FACE_DOWN", GAMEPAD_BUTTON_LEFT_FACE_DOWN);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_FACE_LEFT", GAMEPAD_BUTTON_LEFT_FACE_LEFT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_FACE_UP", GAMEPAD_BUTTON_RIGHT_FACE_UP);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_FACE_RIGHT", GAMEPAD_BUTTON_RIGHT_FACE_RIGHT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_FACE_DOWN", GAMEPAD_BUTTON_RIGHT_FACE_DOWN);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_FACE_LEFT", GAMEPAD_BUTTON_RIGHT_FACE_LEFT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_TRIGGER_1", GAMEPAD_BUTTON_LEFT_TRIGGER_1);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_TRIGGER_2", GAMEPAD_BUTTON_LEFT_TRIGGER_2);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_TRIGGER_1", GAMEPAD_BUTTON_RIGHT_TRIGGER_1);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_TRIGGER_2", GAMEPAD_BUTTON_RIGHT_TRIGGER_2);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_MIDDLE_LEFT", GAMEPAD_BUTTON_MIDDLE_LEFT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_MIDDLE", GAMEPAD_BUTTON_MIDDLE);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_MIDDLE_RIGHT", GAMEPAD_BUTTON_MIDDLE_RIGHT);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_LEFT_THUMB", GAMEPAD_BUTTON_LEFT_THUMB);
  AddDefineInteger(env, exports, "GAMEPAD_BUTTON_RIGHT_THUMB", GAMEPAD_BUTTON_RIGHT_THUMB);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_LEFT_X", GAMEPAD_AXIS_LEFT_X);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_LEFT_Y", GAMEPAD_AXIS_LEFT_Y);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_RIGHT_X", GAMEPAD_AXIS_RIGHT_X);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_RIGHT_Y", GAMEPAD_AXIS_RIGHT_Y);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_LEFT_TRIGGER", GAMEPAD_AXIS_LEFT_TRIGGER);
  AddDefineInteger(env, exports, "GAMEPAD_AXIS_RIGHT_TRIGGER", GAMEPAD_AXIS_RIGHT_TRIGGER);
  AddDefineInteger(env, exports, "LOC_VERTEX_POSITION", LOC_VERTEX_POSITION);
  AddDefineInteger(env, exports, "LOC_VERTEX_TEXCOORD01", LOC_VERTEX_TEXCOORD01);
  AddDefineInteger(env, exports, "LOC_VERTEX_TEXCOORD02", LOC_VERTEX_TEXCOORD02);
  AddDefineInteger(env, exports, "LOC_VERTEX_NORMAL", LOC_VERTEX_NORMAL);
  AddDefineInteger(env, exports, "LOC_VERTEX_TANGENT", LOC_VERTEX_TANGENT);
  AddDefineInteger(env, exports, "LOC_VERTEX_COLOR", LOC_VERTEX_COLOR);
  AddDefineInteger(env, exports, "LOC_MATRIX_MVP", LOC_MATRIX_MVP);
  AddDefineInteger(env, exports, "LOC_MATRIX_MODEL", LOC_MATRIX_MODEL);
  AddDefineInteger(env, exports, "LOC_MATRIX_VIEW", LOC_MATRIX_VIEW);
  AddDefineInteger(env, exports, "LOC_MATRIX_PROJECTION", LOC_MATRIX_PROJECTION);
  AddDefineInteger(env, exports, "LOC_VECTOR_VIEW", LOC_VECTOR_VIEW);
  AddDefineInteger(env, exports, "LOC_COLOR_DIFFUSE", LOC_COLOR_DIFFUSE);
  AddDefineInteger(env, exports, "LOC_COLOR_SPECULAR", LOC_COLOR_SPECULAR);
  AddDefineInteger(env, exports, "LOC_COLOR_AMBIENT", LOC_COLOR_AMBIENT);
  AddDefineInteger(env, exports, "LOC_MAP_ALBEDO", LOC_MAP_ALBEDO);
  AddDefineInteger(env, exports, "LOC_MAP_METALNESS", LOC_MAP_METALNESS);
  AddDefineInteger(env, exports, "LOC_MAP_NORMAL", LOC_MAP_NORMAL);
  AddDefineInteger(env, exports, "LOC_MAP_ROUGHNESS", LOC_MAP_ROUGHNESS);
  AddDefineInteger(env, exports, "LOC_MAP_OCCLUSION", LOC_MAP_OCCLUSION);
  AddDefineInteger(env, exports, "LOC_MAP_EMISSION", LOC_MAP_EMISSION);
  AddDefineInteger(env, exports, "LOC_MAP_HEIGHT", LOC_MAP_HEIGHT);
  AddDefineInteger(env, exports, "LOC_MAP_CUBEMAP", LOC_MAP_CUBEMAP);
  AddDefineInteger(env, exports, "LOC_MAP_IRRADIANCE", LOC_MAP_IRRADIANCE);
  AddDefineInteger(env, exports, "LOC_MAP_PREFILTER", LOC_MAP_PREFILTER);
  AddDefineInteger(env, exports, "LOC_MAP_BRDF", LOC_MAP_BRDF);
  AddDefineInteger(env, exports, "LOC_MAP_DIFFUSE", LOC_MAP_DIFFUSE);
  AddDefineInteger(env, exports, "LOC_MAP_SPECULAR", LOC_MAP_SPECULAR);
  AddDefineInteger(env, exports, "UNIFORM_FLOAT", UNIFORM_FLOAT);
  AddDefineInteger(env, exports, "UNIFORM_VEC2", UNIFORM_VEC2);
  AddDefineInteger(env, exports, "UNIFORM_VEC3", UNIFORM_VEC3);
  AddDefineInteger(env, exports, "UNIFORM_VEC4", UNIFORM_VEC4);
  AddDefineInteger(env, exports, "UNIFORM_INT", UNIFORM_INT);
  AddDefineInteger(env, exports, "UNIFORM_IVEC2", UNIFORM_IVEC2);
  AddDefineInteger(env, exports, "UNIFORM_IVEC3", UNIFORM_IVEC3);
  AddDefineInteger(env, exports, "UNIFORM_IVEC4", UNIFORM_IVEC4);
  AddDefineInteger(env, exports, "UNIFORM_SAMPLER2D", UNIFORM_SAMPLER2D);
  AddDefineInteger(env, exports, "MAP_ALBEDO", MAP_ALBEDO);
  AddDefineInteger(env, exports, "MAP_METALNESS", MAP_METALNESS);
  AddDefineInteger(env, exports, "MAP_NORMAL", MAP_NORMAL);
  AddDefineInteger(env, exports, "MAP_ROUGHNESS", MAP_ROUGHNESS);
  AddDefineInteger(env, exports, "MAP_OCCLUSION", MAP_OCCLUSION);
  AddDefineInteger(env, exports, "MAP_EMISSION", MAP_EMISSION);
  AddDefineInteger(env, exports, "MAP_HEIGHT", MAP_HEIGHT);
  AddDefineInteger(env, exports, "MAP_CUBEMAP", MAP_CUBEMAP);
  AddDefineInteger(env, exports, "MAP_IRRADIANCE", MAP_IRRADIANCE);
  AddDefineInteger(env, exports, "MAP_PREFILTER", MAP_PREFILTER);
  AddDefineInteger(env, exports, "MAP_BRDF", MAP_BRDF);
  AddDefineInteger(env, exports, "MAP_DIFFUSE", MAP_DIFFUSE);
  AddDefineInteger(env, exports, "MAP_SPECULAR", MAP_SPECULAR);
  AddDefineInteger(env, exports, "UNCOMPRESSED_GRAYSCALE", UNCOMPRESSED_GRAYSCALE);
  AddDefineInteger(env, exports, "UNCOMPRESSED_GRAY_ALPHA", UNCOMPRESSED_GRAY_ALPHA);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R5G6B5", UNCOMPRESSED_R5G6B5);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R8G8B8", UNCOMPRESSED_R8G8B8);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R5G5B5A1", UNCOMPRESSED_R5G5B5A1);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R4G4B4A4", UNCOMPRESSED_R4G4B4A4);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R8G8B8A8", UNCOMPRESSED_R8G8B8A8);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R32", UNCOMPRESSED_R32);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R32G32B32", UNCOMPRESSED_R32G32B32);
  AddDefineInteger(env, exports, "UNCOMPRESSED_R32G32B32A32", UNCOMPRESSED_R32G32B32A32);
  AddDefineInteger(env, exports, "COMPRESSED_DXT1_RGB", COMPRESSED_DXT1_RGB);
  AddDefineInteger(env, exports, "COMPRESSED_DXT1_RGBA", COMPRESSED_DXT1_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_DXT3_RGBA", COMPRESSED_DXT3_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_DXT5_RGBA", COMPRESSED_DXT5_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_ETC1_RGB", COMPRESSED_ETC1_RGB);
  AddDefineInteger(env, exports, "COMPRESSED_ETC2_RGB", COMPRESSED_ETC2_RGB);
  AddDefineInteger(env, exports, "COMPRESSED_ETC2_EAC_RGBA", COMPRESSED_ETC2_EAC_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_PVRT_RGB", COMPRESSED_PVRT_RGB);
  AddDefineInteger(env, exports, "COMPRESSED_PVRT_RGBA", COMPRESSED_PVRT_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_ASTC_4x4_RGBA", COMPRESSED_ASTC_4x4_RGBA);
  AddDefineInteger(env, exports, "COMPRESSED_ASTC_8x8_RGBA", COMPRESSED_ASTC_8x8_RGBA);
  AddDefineInteger(env, exports, "FILTER_POINT", FILTER_POINT);
  AddDefineInteger(env, exports, "FILTER_BILINEAR", FILTER_BILINEAR);
  AddDefineInteger(env, exports, "FILTER_TRILINEAR", FILTER_TRILINEAR);
  AddDefineInteger(env, exports, "FILTER_ANISOTROPIC_4X", FILTER_ANISOTROPIC_4X);
  AddDefineInteger(env, exports, "FILTER_ANISOTROPIC_8X", FILTER_ANISOTROPIC_8X);
  AddDefineInteger(env, exports, "FILTER_ANISOTROPIC_16X", FILTER_ANISOTROPIC_16X);
  AddDefineInteger(env, exports, "WRAP_REPEAT", WRAP_REPEAT);
  AddDefineInteger(env, exports, "WRAP_CLAMP", WRAP_CLAMP);
  AddDefineInteger(env, exports, "WRAP_MIRROR_REPEAT", WRAP_MIRROR_REPEAT);
  AddDefineInteger(env, exports, "WRAP_MIRROR_CLAMP", WRAP_MIRROR_CLAMP);
  AddDefineInteger(env, exports, "CUBEMAP_AUTO_DETECT", CUBEMAP_AUTO_DETECT);
  AddDefineInteger(env, exports, "CUBEMAP_LINE_VERTICAL", CUBEMAP_LINE_VERTICAL);
  AddDefineInteger(env, exports, "CUBEMAP_LINE_HORIZONTAL", CUBEMAP_LINE_HORIZONTAL);
  AddDefineInteger(env, exports, "CUBEMAP_CROSS_THREE_BY_FOUR", CUBEMAP_CROSS_THREE_BY_FOUR);
  AddDefineInteger(env, exports, "CUBEMAP_CROSS_FOUR_BY_THREE", CUBEMAP_CROSS_FOUR_BY_THREE);
  AddDefineInteger(env, exports, "CUBEMAP_PANORAMA", CUBEMAP_PANORAMA);
  AddDefineInteger(env, exports, "FONT_DEFAULT", FONT_DEFAULT);
  AddDefineInteger(env, exports, "FONT_BITMAP", FONT_BITMAP);
  AddDefineInteger(env, exports, "FONT_SDF", FONT_SDF);
  AddDefineInteger(env, exports, "BLEND_ALPHA", BLEND_ALPHA);
  AddDefineInteger(env, exports, "BLEND_ADDITIVE", BLEND_ADDITIVE);
  AddDefineInteger(env, exports, "BLEND_MULTIPLIED", BLEND_MULTIPLIED);
  AddDefineInteger(env, exports, "BLEND_ADD_COLORS", BLEND_ADD_COLORS);
  AddDefineInteger(env, exports, "BLEND_SUBTRACT_COLORS", BLEND_SUBTRACT_COLORS);
  AddDefineInteger(env, exports, "BLEND_CUSTOM", BLEND_CUSTOM);
  AddDefineInteger(env, exports, "GESTURE_NONE", GESTURE_NONE);
  AddDefineInteger(env, exports, "GESTURE_TAP", GESTURE_TAP);
  AddDefineInteger(env, exports, "GESTURE_DOUBLETAP", GESTURE_DOUBLETAP);
  AddDefineInteger(env, exports, "GESTURE_HOLD", GESTURE_HOLD);
  AddDefineInteger(env, exports, "GESTURE_DRAG", GESTURE_DRAG);
  AddDefineInteger(env, exports, "GESTURE_SWIPE_RIGHT", GESTURE_SWIPE_RIGHT);
  AddDefineInteger(env, exports, "GESTURE_SWIPE_LEFT", GESTURE_SWIPE_LEFT);
  AddDefineInteger(env, exports, "GESTURE_SWIPE_UP", GESTURE_SWIPE_UP);
  AddDefineInteger(env, exports, "GESTURE_SWIPE_DOWN", GESTURE_SWIPE_DOWN);
  AddDefineInteger(env, exports, "GESTURE_PINCH_IN", GESTURE_PINCH_IN);
  AddDefineInteger(env, exports, "GESTURE_PINCH_OUT", GESTURE_PINCH_OUT);
  AddDefineInteger(env, exports, "CAMERA_CUSTOM", CAMERA_CUSTOM);
  AddDefineInteger(env, exports, "CAMERA_FREE", CAMERA_FREE);
  AddDefineInteger(env, exports, "CAMERA_ORBITAL", CAMERA_ORBITAL);
  AddDefineInteger(env, exports, "CAMERA_FIRST_PERSON", CAMERA_FIRST_PERSON);
  AddDefineInteger(env, exports, "CAMERA_THIRD_PERSON", CAMERA_THIRD_PERSON);
  AddDefineInteger(env, exports, "CAMERA_PERSPECTIVE", CAMERA_PERSPECTIVE);
  AddDefineInteger(env, exports, "CAMERA_ORTHOGRAPHIC", CAMERA_ORTHOGRAPHIC);
  AddDefineInteger(env, exports, "NPT_9PATCH", NPT_9PATCH);
  AddDefineInteger(env, exports, "NPT_3PATCH_VERTICAL", NPT_3PATCH_VERTICAL);
  AddDefineInteger(env, exports, "NPT_3PATCH_HORIZONTAL", NPT_3PATCH_HORIZONTAL);
}

void node_raylib_bindings_functions(Napi::Env& env, Napi::Object& exports) {
  AddFunction(env, exports, "InitWindow", &InitWindow);
  AddFunction(env, exports, "WindowShouldClose", &WindowShouldClose);
  AddFunction(env, exports, "CloseWindow", &CloseWindow);
  AddFunction(env, exports, "IsWindowReady", &IsWindowReady);
  AddFunction(env, exports, "IsWindowFullscreen", &IsWindowFullscreen);
  AddFunction(env, exports, "IsWindowHidden", &IsWindowHidden);
  AddFunction(env, exports, "IsWindowMinimized", &IsWindowMinimized);
  AddFunction(env, exports, "IsWindowMaximized", &IsWindowMaximized);
  AddFunction(env, exports, "IsWindowFocused", &IsWindowFocused);
  AddFunction(env, exports, "IsWindowResized", &IsWindowResized);
  AddFunction(env, exports, "IsWindowState", &IsWindowState);
  AddFunction(env, exports, "SetWindowState", &SetWindowState);
  AddFunction(env, exports, "ClearWindowState", &ClearWindowState);
  AddFunction(env, exports, "ToggleFullscreen", &ToggleFullscreen);
  AddFunction(env, exports, "MaximizeWindow", &MaximizeWindow);
  AddFunction(env, exports, "MinimizeWindow", &MinimizeWindow);
  AddFunction(env, exports, "RestoreWindow", &RestoreWindow);
  AddFunction(env, exports, "SetWindowIcon", &SetWindowIcon);
  AddFunction(env, exports, "SetWindowTitle", &SetWindowTitle);
  AddFunction(env, exports, "SetWindowPosition", &SetWindowPosition);
  AddFunction(env, exports, "SetWindowMonitor", &SetWindowMonitor);
  AddFunction(env, exports, "SetWindowMinSize", &SetWindowMinSize);
  AddFunction(env, exports, "SetWindowSize", &SetWindowSize);
  AddFunction(env, exports, "GetScreenWidth", &GetScreenWidth);
  AddFunction(env, exports, "GetScreenHeight", &GetScreenHeight);
  AddFunction(env, exports, "GetMonitorCount", &GetMonitorCount);
  AddFunction(env, exports, "GetMonitorPosition", &GetMonitorPosition);
  AddFunction(env, exports, "GetMonitorWidth", &GetMonitorWidth);
  AddFunction(env, exports, "GetMonitorHeight", &GetMonitorHeight);
  AddFunction(env, exports, "GetMonitorPhysicalWidth", &GetMonitorPhysicalWidth);
  AddFunction(env, exports, "GetMonitorPhysicalHeight", &GetMonitorPhysicalHeight);
  AddFunction(env, exports, "GetMonitorRefreshRate", &GetMonitorRefreshRate);
  AddFunction(env, exports, "GetWindowPosition", &GetWindowPosition);
  AddFunction(env, exports, "GetWindowScaleDPI", &GetWindowScaleDPI);
  AddFunction(env, exports, "GetMonitorName", &GetMonitorName);
  AddFunction(env, exports, "SetClipboardText", &SetClipboardText);
  AddFunction(env, exports, "GetClipboardText", &GetClipboardText);
  AddFunction(env, exports, "ShowCursor", &ShowCursor);
  AddFunction(env, exports, "HideCursor", &HideCursor);
  AddFunction(env, exports, "IsCursorHidden", &IsCursorHidden);
  AddFunction(env, exports, "EnableCursor", &EnableCursor);
  AddFunction(env, exports, "DisableCursor", &DisableCursor);
  AddFunction(env, exports, "IsCursorOnScreen", &IsCursorOnScreen);
  AddFunction(env, exports, "ClearBackground", &ClearBackground);
  AddFunction(env, exports, "BeginDrawing", &BeginDrawing);
  AddFunction(env, exports, "EndDrawing", &EndDrawing);
  AddFunction(env, exports, "BeginMode2D", &BeginMode2D);
  AddFunction(env, exports, "EndMode2D", &EndMode2D);
  AddFunction(env, exports, "BeginMode3D", &BeginMode3D);
  AddFunction(env, exports, "EndMode3D", &EndMode3D);
  AddFunction(env, exports, "BeginTextureMode", &BeginTextureMode);
  AddFunction(env, exports, "EndTextureMode", &EndTextureMode);
  AddFunction(env, exports, "BeginScissorMode", &BeginScissorMode);
  AddFunction(env, exports, "EndScissorMode", &EndScissorMode);
  AddFunction(env, exports, "GetMouseRay", &GetMouseRay);
  AddFunction(env, exports, "GetCameraMatrix", &GetCameraMatrix);
  AddFunction(env, exports, "GetCameraMatrix2D", &GetCameraMatrix2D);
  AddFunction(env, exports, "GetWorldToScreen", &GetWorldToScreen);
  AddFunction(env, exports, "GetWorldToScreenEx", &GetWorldToScreenEx);
  AddFunction(env, exports, "GetWorldToScreen2D", &GetWorldToScreen2D);
  AddFunction(env, exports, "GetScreenToWorld2D", &GetScreenToWorld2D);
  AddFunction(env, exports, "SetTargetFPS", &SetTargetFPS);
  AddFunction(env, exports, "GetFPS", &GetFPS);
  AddFunction(env, exports, "GetFrameTime", &GetFrameTime);
  AddFunction(env, exports, "GetTime", &GetTime);
  AddFunction(env, exports, "SetConfigFlags", &SetConfigFlags);
  AddFunction(env, exports, "SetTraceLogLevel", &SetTraceLogLevel);
  AddFunction(env, exports, "SetTraceLogExit", &SetTraceLogExit);
  AddFunction(env, exports, "MemAlloc", &MemAlloc);
  AddFunction(env, exports, "MemFree", &MemFree);
  AddFunction(env, exports, "TakeScreenshot", &TakeScreenshot);
  AddFunction(env, exports, "GetRandomValue", &GetRandomValue);
  AddFunction(env, exports, "LoadFileData", &LoadFileData);
  AddFunction(env, exports, "UnloadFileData", &UnloadFileData);
  AddFunction(env, exports, "SaveFileData", &SaveFileData);
  AddFunction(env, exports, "LoadFileText", &LoadFileText);
  AddFunction(env, exports, "UnloadFileText", &UnloadFileText);
  AddFunction(env, exports, "SaveFileText", &SaveFileText);
  AddFunction(env, exports, "FileExists", &FileExists);
  AddFunction(env, exports, "DirectoryExists", &DirectoryExists);
  AddFunction(env, exports, "IsFileExtension", &IsFileExtension);
  AddFunction(env, exports, "GetFileExtension", &GetFileExtension);
  AddFunction(env, exports, "GetFileName", &GetFileName);
  AddFunction(env, exports, "GetFileNameWithoutExt", &GetFileNameWithoutExt);
  AddFunction(env, exports, "GetDirectoryPath", &GetDirectoryPath);
  AddFunction(env, exports, "GetPrevDirectoryPath", &GetPrevDirectoryPath);
  AddFunction(env, exports, "GetWorkingDirectory", &GetWorkingDirectory);
  AddFunction(env, exports, "GetDirectoryFiles", &GetDirectoryFiles);
  AddFunction(env, exports, "ClearDirectoryFiles", &ClearDirectoryFiles);
  AddFunction(env, exports, "ChangeDirectory", &ChangeDirectory);
  AddFunction(env, exports, "IsFileDropped", &IsFileDropped);
  AddFunction(env, exports, "GetDroppedFiles", &GetDroppedFiles);
  AddFunction(env, exports, "ClearDroppedFiles", &ClearDroppedFiles);
  AddFunction(env, exports, "GetFileModTime", &GetFileModTime);
  AddFunction(env, exports, "CompressData", &CompressData);
  AddFunction(env, exports, "DecompressData", &DecompressData);
  AddFunction(env, exports, "SaveStorageValue", &SaveStorageValue);
  AddFunction(env, exports, "LoadStorageValue", &LoadStorageValue);
  AddFunction(env, exports, "OpenURL", &OpenURL);
  AddFunction(env, exports, "IsKeyPressed", &IsKeyPressed);
  AddFunction(env, exports, "IsKeyDown", &IsKeyDown);
  AddFunction(env, exports, "IsKeyReleased", &IsKeyReleased);
  AddFunction(env, exports, "IsKeyUp", &IsKeyUp);
  AddFunction(env, exports, "SetExitKey", &SetExitKey);
  AddFunction(env, exports, "GetKeyPressed", &GetKeyPressed);
  AddFunction(env, exports, "GetCharPressed", &GetCharPressed);
  AddFunction(env, exports, "IsGamepadAvailable", &IsGamepadAvailable);
  AddFunction(env, exports, "IsGamepadName", &IsGamepadName);
  AddFunction(env, exports, "GetGamepadName", &GetGamepadName);
  AddFunction(env, exports, "IsGamepadButtonPressed", &IsGamepadButtonPressed);
  AddFunction(env, exports, "IsGamepadButtonDown", &IsGamepadButtonDown);
  AddFunction(env, exports, "IsGamepadButtonReleased", &IsGamepadButtonReleased);
  AddFunction(env, exports, "IsGamepadButtonUp", &IsGamepadButtonUp);
  AddFunction(env, exports, "GetGamepadButtonPressed", &GetGamepadButtonPressed);
  AddFunction(env, exports, "GetGamepadAxisCount", &GetGamepadAxisCount);
  AddFunction(env, exports, "GetGamepadAxisMovement", &GetGamepadAxisMovement);
  AddFunction(env, exports, "IsMouseButtonPressed", &IsMouseButtonPressed);
  AddFunction(env, exports, "IsMouseButtonDown", &IsMouseButtonDown);
  AddFunction(env, exports, "IsMouseButtonReleased", &IsMouseButtonReleased);
  AddFunction(env, exports, "IsMouseButtonUp", &IsMouseButtonUp);
  AddFunction(env, exports, "GetMouseX", &GetMouseX);
  AddFunction(env, exports, "GetMouseY", &GetMouseY);
  AddFunction(env, exports, "GetMousePosition", &GetMousePosition);
  AddFunction(env, exports, "SetMousePosition", &SetMousePosition);
  AddFunction(env, exports, "SetMouseOffset", &SetMouseOffset);
  AddFunction(env, exports, "SetMouseScale", &SetMouseScale);
  AddFunction(env, exports, "GetMouseWheelMove", &GetMouseWheelMove);
  AddFunction(env, exports, "GetMouseCursor", &GetMouseCursor);
  AddFunction(env, exports, "SetMouseCursor", &SetMouseCursor);
  AddFunction(env, exports, "GetTouchX", &GetTouchX);
  AddFunction(env, exports, "GetTouchY", &GetTouchY);
  AddFunction(env, exports, "GetTouchPosition", &GetTouchPosition);
  AddFunction(env, exports, "SetGesturesEnabled", &SetGesturesEnabled);
  AddFunction(env, exports, "IsGestureDetected", &IsGestureDetected);
  AddFunction(env, exports, "GetGestureDetected", &GetGestureDetected);
  AddFunction(env, exports, "GetTouchPointsCount", &GetTouchPointsCount);
  AddFunction(env, exports, "GetGestureHoldDuration", &GetGestureHoldDuration);
  AddFunction(env, exports, "GetGestureDragVector", &GetGestureDragVector);
  AddFunction(env, exports, "GetGestureDragAngle", &GetGestureDragAngle);
  AddFunction(env, exports, "GetGesturePinchVector", &GetGesturePinchVector);
  AddFunction(env, exports, "GetGesturePinchAngle", &GetGesturePinchAngle);
  AddFunction(env, exports, "SetCameraMode", &SetCameraMode);
  // AddFunction(env, exports, "UpdateCamera", &UpdateCamera);
  AddFunction(env, exports, "SetCameraPanControl", &SetCameraPanControl);
  AddFunction(env, exports, "SetCameraAltControl", &SetCameraAltControl);
  AddFunction(env, exports, "SetCameraSmoothZoomControl", &SetCameraSmoothZoomControl);
  AddFunction(env, exports, "SetCameraMoveControls", &SetCameraMoveControls);
  AddFunction(env, exports, "DrawPixel", &DrawPixel);
  AddFunction(env, exports, "DrawPixelV", &DrawPixelV);
  AddFunction(env, exports, "DrawLine", &DrawLine);
  AddFunction(env, exports, "DrawLineV", &DrawLineV);
  AddFunction(env, exports, "DrawLineEx", &DrawLineEx);
  AddFunction(env, exports, "DrawLineBezier", &DrawLineBezier);
  AddFunction(env, exports, "DrawLineStrip", &DrawLineStrip);
  AddFunction(env, exports, "DrawCircle", &DrawCircle);
  AddFunction(env, exports, "DrawCircleSector", &DrawCircleSector);
  AddFunction(env, exports, "DrawCircleSectorLines", &DrawCircleSectorLines);
  AddFunction(env, exports, "DrawCircleGradient", &DrawCircleGradient);
  AddFunction(env, exports, "DrawCircleV", &DrawCircleV);
  AddFunction(env, exports, "DrawCircleLines", &DrawCircleLines);
  AddFunction(env, exports, "DrawEllipse", &DrawEllipse);
  AddFunction(env, exports, "DrawEllipseLines", &DrawEllipseLines);
  AddFunction(env, exports, "DrawRing", &DrawRing);
  AddFunction(env, exports, "DrawRingLines", &DrawRingLines);
  AddFunction(env, exports, "DrawRectangle", &DrawRectangle);
  AddFunction(env, exports, "DrawRectangleV", &DrawRectangleV);
  AddFunction(env, exports, "DrawRectangleRec", &DrawRectangleRec);
  AddFunction(env, exports, "DrawRectanglePro", &DrawRectanglePro);
  AddFunction(env, exports, "DrawRectangleGradientV", &DrawRectangleGradientV);
  AddFunction(env, exports, "DrawRectangleGradientH", &DrawRectangleGradientH);
  AddFunction(env, exports, "DrawRectangleGradientEx", &DrawRectangleGradientEx);
  AddFunction(env, exports, "DrawRectangleLines", &DrawRectangleLines);
  AddFunction(env, exports, "DrawRectangleLinesEx", &DrawRectangleLinesEx);
  AddFunction(env, exports, "DrawRectangleRounded", &DrawRectangleRounded);
  AddFunction(env, exports, "DrawRectangleRoundedLines", &DrawRectangleRoundedLines);
  AddFunction(env, exports, "DrawTriangle", &DrawTriangle);
  AddFunction(env, exports, "DrawTriangleLines", &DrawTriangleLines);
  AddFunction(env, exports, "DrawTriangleFan", &DrawTriangleFan);
  AddFunction(env, exports, "DrawTriangleStrip", &DrawTriangleStrip);
  AddFunction(env, exports, "DrawPoly", &DrawPoly);
  AddFunction(env, exports, "DrawPolyLines", &DrawPolyLines);
  AddFunction(env, exports, "CheckCollisionRecs", &CheckCollisionRecs);
  AddFunction(env, exports, "CheckCollisionCircles", &CheckCollisionCircles);
  AddFunction(env, exports, "CheckCollisionCircleRec", &CheckCollisionCircleRec);
  AddFunction(env, exports, "CheckCollisionPointRec", &CheckCollisionPointRec);
  AddFunction(env, exports, "CheckCollisionPointCircle", &CheckCollisionPointCircle);
  AddFunction(env, exports, "CheckCollisionPointTriangle", &CheckCollisionPointTriangle);
  AddFunction(env, exports, "CheckCollisionLines", &CheckCollisionLines);
  AddFunction(env, exports, "GetCollisionRec", &GetCollisionRec);
  AddFunction(env, exports, "LoadImage", &LoadImage);
  AddFunction(env, exports, "LoadImageRaw", &LoadImageRaw);
  AddFunction(env, exports, "LoadImageAnim", &LoadImageAnim);
  AddFunction(env, exports, "LoadImageFromMemory", &LoadImageFromMemory);
  AddFunction(env, exports, "UnloadImage", &UnloadImage);
  AddFunction(env, exports, "ExportImage", &ExportImage);
  AddFunction(env, exports, "ExportImageAsCode", &ExportImageAsCode);
  AddFunction(env, exports, "GenImageColor", &GenImageColor);
  AddFunction(env, exports, "GenImageGradientV", &GenImageGradientV);
  AddFunction(env, exports, "GenImageGradientH", &GenImageGradientH);
  AddFunction(env, exports, "GenImageGradientRadial", &GenImageGradientRadial);
  AddFunction(env, exports, "GenImageChecked", &GenImageChecked);
  AddFunction(env, exports, "GenImageWhiteNoise", &GenImageWhiteNoise);
  AddFunction(env, exports, "GenImagePerlinNoise", &GenImagePerlinNoise);
  AddFunction(env, exports, "GenImageCellular", &GenImageCellular);
  AddFunction(env, exports, "ImageCopy", &ImageCopy);
  AddFunction(env, exports, "ImageFromImage", &ImageFromImage);
  AddFunction(env, exports, "ImageText", &ImageText);
  AddFunction(env, exports, "ImageTextEx", &ImageTextEx);
  AddFunction(env, exports, "ImageFormat", &ImageFormat);
  AddFunction(env, exports, "ImageToPOT", &ImageToPOT);
  AddFunction(env, exports, "ImageCrop", &ImageCrop);
  AddFunction(env, exports, "ImageAlphaCrop", &ImageAlphaCrop);
  AddFunction(env, exports, "ImageAlphaClear", &ImageAlphaClear);
  AddFunction(env, exports, "ImageAlphaMask", &ImageAlphaMask);
  AddFunction(env, exports, "ImageAlphaPremultiply", &ImageAlphaPremultiply);
  AddFunction(env, exports, "ImageResize", &ImageResize);
  AddFunction(env, exports, "ImageResizeNN", &ImageResizeNN);
  AddFunction(env, exports, "ImageResizeCanvas", &ImageResizeCanvas);
  AddFunction(env, exports, "ImageMipmaps", &ImageMipmaps);
  AddFunction(env, exports, "ImageDither", &ImageDither);
  AddFunction(env, exports, "ImageFlipVertical", &ImageFlipVertical);
  AddFunction(env, exports, "ImageFlipHorizontal", &ImageFlipHorizontal);
  AddFunction(env, exports, "ImageRotateCW", &ImageRotateCW);
  AddFunction(env, exports, "ImageRotateCCW", &ImageRotateCCW);
  AddFunction(env, exports, "ImageColorTint", &ImageColorTint);
  AddFunction(env, exports, "ImageColorInvert", &ImageColorInvert);
  AddFunction(env, exports, "ImageColorGrayscale", &ImageColorGrayscale);
  AddFunction(env, exports, "ImageColorContrast", &ImageColorContrast);
  AddFunction(env, exports, "ImageColorBrightness", &ImageColorBrightness);
  AddFunction(env, exports, "ImageColorReplace", &ImageColorReplace);
  AddFunction(env, exports, "LoadImageColors", &LoadImageColors);
  AddFunction(env, exports, "LoadImagePalette", &LoadImagePalette);
  AddFunction(env, exports, "UnloadImageColors", &UnloadImageColors);
  AddFunction(env, exports, "UnloadImagePalette", &UnloadImagePalette);
  AddFunction(env, exports, "GetImageAlphaBorder", &GetImageAlphaBorder);
  AddFunction(env, exports, "ImageClearBackground", &ImageClearBackground);
  AddFunction(env, exports, "ImageDrawPixel", &ImageDrawPixel);
  AddFunction(env, exports, "ImageDrawPixelV", &ImageDrawPixelV);
  AddFunction(env, exports, "ImageDrawLine", &ImageDrawLine);
  AddFunction(env, exports, "ImageDrawLineV", &ImageDrawLineV);
  AddFunction(env, exports, "ImageDrawCircle", &ImageDrawCircle);
  AddFunction(env, exports, "ImageDrawCircleV", &ImageDrawCircleV);
  AddFunction(env, exports, "ImageDrawRectangle", &ImageDrawRectangle);
  AddFunction(env, exports, "ImageDrawRectangleV", &ImageDrawRectangleV);
  AddFunction(env, exports, "ImageDrawRectangleRec", &ImageDrawRectangleRec);
  AddFunction(env, exports, "ImageDrawRectangleLines", &ImageDrawRectangleLines);
  AddFunction(env, exports, "ImageDraw", &ImageDraw);
  AddFunction(env, exports, "ImageDrawText", &ImageDrawText);
  AddFunction(env, exports, "ImageDrawTextEx", &ImageDrawTextEx);
  AddFunction(env, exports, "LoadTexture", &LoadTexture);
  AddFunction(env, exports, "LoadTextureFromImage", &LoadTextureFromImage);
  AddFunction(env, exports, "LoadTextureCubemap", &LoadTextureCubemap);
  AddFunction(env, exports, "LoadRenderTexture", &LoadRenderTexture);
  AddFunction(env, exports, "UnloadTexture", &UnloadTexture);
  AddFunction(env, exports, "UnloadRenderTexture", &UnloadRenderTexture);
  AddFunction(env, exports, "UpdateTexture", &UpdateTexture);
  AddFunction(env, exports, "UpdateTextureRec", &UpdateTextureRec);
  AddFunction(env, exports, "GetTextureData", &GetTextureData);
  AddFunction(env, exports, "GetScreenData", &GetScreenData);
  AddFunction(env, exports, "GenTextureMipmaps", &GenTextureMipmaps);
  AddFunction(env, exports, "SetTextureFilter", &SetTextureFilter);
  AddFunction(env, exports, "SetTextureWrap", &SetTextureWrap);
  AddFunction(env, exports, "DrawTexture", &DrawTexture);
  AddFunction(env, exports, "DrawTextureV", &DrawTextureV);
  AddFunction(env, exports, "DrawTextureEx", &DrawTextureEx);
  AddFunction(env, exports, "DrawTextureRec", &DrawTextureRec);
  AddFunction(env, exports, "DrawTextureQuad", &DrawTextureQuad);
  AddFunction(env, exports, "DrawTextureTiled", &DrawTextureTiled);
  AddFunction(env, exports, "DrawTexturePro", &DrawTexturePro);
  AddFunction(env, exports, "DrawTextureNPatch", &DrawTextureNPatch);
  AddFunction(env, exports, "Fade", &Fade);
  AddFunction(env, exports, "ColorToInt", &ColorToInt);
  AddFunction(env, exports, "ColorNormalize", &ColorNormalize);
  AddFunction(env, exports, "ColorFromNormalized", &ColorFromNormalized);
  AddFunction(env, exports, "ColorToHSV", &ColorToHSV);
  AddFunction(env, exports, "ColorFromHSV", &ColorFromHSV);
  AddFunction(env, exports, "ColorAlpha", &ColorAlpha);
  AddFunction(env, exports, "ColorAlphaBlend", &ColorAlphaBlend);
  AddFunction(env, exports, "GetColor", &GetColor);
  AddFunction(env, exports, "GetPixelColor", &GetPixelColor);
  AddFunction(env, exports, "SetPixelColor", &SetPixelColor);
  AddFunction(env, exports, "GetPixelDataSize", &GetPixelDataSize);
  AddFunction(env, exports, "GetFontDefault", &GetFontDefault);
  AddFunction(env, exports, "LoadFont", &LoadFont);
  AddFunction(env, exports, "LoadFontEx", &LoadFontEx);
  AddFunction(env, exports, "LoadFontFromImage", &LoadFontFromImage);
  AddFunction(env, exports, "LoadFontFromMemory", &LoadFontFromMemory);
  AddFunction(env, exports, "LoadFontData", &LoadFontData);
  AddFunction(env, exports, "GenImageFontAtlas", &GenImageFontAtlas);
  AddFunction(env, exports, "UnloadFontData", &UnloadFontData);
  AddFunction(env, exports, "UnloadFont", &UnloadFont);
  AddFunction(env, exports, "DrawFPS", &DrawFPS);
  AddFunction(env, exports, "DrawText", &DrawText);
  AddFunction(env, exports, "DrawTextEx", &DrawTextEx);
  AddFunction(env, exports, "DrawTextRec", &DrawTextRec);
  AddFunction(env, exports, "DrawTextRecEx", &DrawTextRecEx);
  AddFunction(env, exports, "DrawTextCodepoint", &DrawTextCodepoint);
  AddFunction(env, exports, "MeasureText", &MeasureText);
  AddFunction(env, exports, "MeasureTextEx", &MeasureTextEx);
  AddFunction(env, exports, "GetGlyphIndex", &GetGlyphIndex);
  AddFunction(env, exports, "TextCopy", &TextCopy);
  AddFunction(env, exports, "TextIsEqual", &TextIsEqual);
  AddFunction(env, exports, "TextLength", &TextLength);
  // AddFunction(env, exports, "TextFormat", &TextFormat);
  AddFunction(env, exports, "TextSubtext", &TextSubtext);
  AddFunction(env, exports, "TextReplace", &TextReplace);
  AddFunction(env, exports, "TextInsert", &TextInsert);
  AddFunction(env, exports, "TextJoin", &TextJoin);
  AddFunction(env, exports, "TextSplit", &TextSplit);
  AddFunction(env, exports, "TextAppend", &TextAppend);
  AddFunction(env, exports, "TextFindIndex", &TextFindIndex);
  AddFunction(env, exports, "TextToUpper", &TextToUpper);
  AddFunction(env, exports, "TextToLower", &TextToLower);
  AddFunction(env, exports, "TextToPascal", &TextToPascal);
  AddFunction(env, exports, "TextToInteger", &TextToInteger);
  AddFunction(env, exports, "TextToUtf8", &TextToUtf8);
  AddFunction(env, exports, "GetCodepoints", &GetCodepoints);
  AddFunction(env, exports, "GetCodepointsCount", &GetCodepointsCount);
  AddFunction(env, exports, "GetNextCodepoint", &GetNextCodepoint);
  AddFunction(env, exports, "CodepointToUtf8", &CodepointToUtf8);
  AddFunction(env, exports, "DrawLine3D", &DrawLine3D);
  AddFunction(env, exports, "DrawPoint3D", &DrawPoint3D);
  AddFunction(env, exports, "DrawCircle3D", &DrawCircle3D);
  AddFunction(env, exports, "DrawTriangle3D", &DrawTriangle3D);
  AddFunction(env, exports, "DrawTriangleStrip3D", &DrawTriangleStrip3D);
  AddFunction(env, exports, "DrawCube", &DrawCube);
  AddFunction(env, exports, "DrawCubeV", &DrawCubeV);
  AddFunction(env, exports, "DrawCubeWires", &DrawCubeWires);
  AddFunction(env, exports, "DrawCubeWiresV", &DrawCubeWiresV);
  AddFunction(env, exports, "DrawCubeTexture", &DrawCubeTexture);
  AddFunction(env, exports, "DrawSphere", &DrawSphere);
  AddFunction(env, exports, "DrawSphereEx", &DrawSphereEx);
  AddFunction(env, exports, "DrawSphereWires", &DrawSphereWires);
  AddFunction(env, exports, "DrawCylinder", &DrawCylinder);
  AddFunction(env, exports, "DrawCylinderWires", &DrawCylinderWires);
  AddFunction(env, exports, "DrawPlane", &DrawPlane);
  AddFunction(env, exports, "DrawRay", &DrawRay);
  AddFunction(env, exports, "DrawGrid", &DrawGrid);
  AddFunction(env, exports, "DrawGizmo", &DrawGizmo);
  // AddFunction(env, exports, "LoadModel", &LoadModel);
  // AddFunction(env, exports, "LoadModelFromMesh", &LoadModelFromMesh);
  // AddFunction(env, exports, "UnloadModel", &UnloadModel);
  // AddFunction(env, exports, "UnloadModelKeepMeshes", &UnloadModelKeepMeshes);
  // AddFunction(env, exports, "LoadMeshes", &LoadMeshes);
  // AddFunction(env, exports, "UnloadMesh", &UnloadMesh);
  // AddFunction(env, exports, "ExportMesh", &ExportMesh);
  // AddFunction(env, exports, "LoadMaterials", &LoadMaterials);
  // AddFunction(env, exports, "LoadMaterialDefault", &LoadMaterialDefault);
  // AddFunction(env, exports, "UnloadMaterial", &UnloadMaterial);
  // AddFunction(env, exports, "SetMaterialTexture", &SetMaterialTexture);
  // AddFunction(env, exports, "SetModelMeshMaterial", &SetModelMeshMaterial);
  // AddFunction(env, exports, "LoadModelAnimations", &LoadModelAnimations);
  // AddFunction(env, exports, "UpdateModelAnimation", &UpdateModelAnimation);
  // AddFunction(env, exports, "UnloadModelAnimation", &UnloadModelAnimation);
  // AddFunction(env, exports, "IsModelAnimationValid", &IsModelAnimationValid);
  // AddFunction(env, exports, "GenMeshPoly", &GenMeshPoly);
  // AddFunction(env, exports, "GenMeshPlane", &GenMeshPlane);
  // AddFunction(env, exports, "GenMeshCube", &GenMeshCube);
  // AddFunction(env, exports, "GenMeshSphere", &GenMeshSphere);
  // AddFunction(env, exports, "GenMeshHemiSphere", &GenMeshHemiSphere);
  // AddFunction(env, exports, "GenMeshCylinder", &GenMeshCylinder);
  // AddFunction(env, exports, "GenMeshTorus", &GenMeshTorus);
  // AddFunction(env, exports, "GenMeshKnot", &GenMeshKnot);
  // AddFunction(env, exports, "GenMeshHeightmap", &GenMeshHeightmap);
  // AddFunction(env, exports, "GenMeshCubicmap", &GenMeshCubicmap);
  // AddFunction(env, exports, "MeshBoundingBox", &MeshBoundingBox);
  // AddFunction(env, exports, "MeshTangents", &MeshTangents);
  // AddFunction(env, exports, "MeshBinormals", &MeshBinormals);
  // AddFunction(env, exports, "MeshNormalsSmooth", &MeshNormalsSmooth);
  // AddFunction(env, exports, "DrawModel", &DrawModel);
  // AddFunction(env, exports, "DrawModelEx", &DrawModelEx);
  // AddFunction(env, exports, "DrawModelWires", &DrawModelWires);
  // AddFunction(env, exports, "DrawModelWiresEx", &DrawModelWiresEx);
  AddFunction(env, exports, "DrawBoundingBox", &DrawBoundingBox);
  AddFunction(env, exports, "DrawBillboard", &DrawBillboard);
  AddFunction(env, exports, "DrawBillboardRec", &DrawBillboardRec);
  AddFunction(env, exports, "CheckCollisionSpheres", &CheckCollisionSpheres);
  AddFunction(env, exports, "CheckCollisionBoxes", &CheckCollisionBoxes);
  AddFunction(env, exports, "CheckCollisionBoxSphere", &CheckCollisionBoxSphere);
  AddFunction(env, exports, "CheckCollisionRaySphere", &CheckCollisionRaySphere);
  AddFunction(env, exports, "CheckCollisionRaySphereEx", &CheckCollisionRaySphereEx);
  AddFunction(env, exports, "CheckCollisionRayBox", &CheckCollisionRayBox);
  // AddFunction(env, exports, "GetCollisionRayMesh", &GetCollisionRayMesh);
  // AddFunction(env, exports, "GetCollisionRayModel", &GetCollisionRayModel);
  AddFunction(env, exports, "GetCollisionRayTriangle", &GetCollisionRayTriangle);
  AddFunction(env, exports, "GetCollisionRayGround", &GetCollisionRayGround);
  AddFunction(env, exports, "LoadShader", &LoadShader);
  AddFunction(env, exports, "LoadShaderCode", &LoadShaderCode);
  AddFunction(env, exports, "UnloadShader", &UnloadShader);
  AddFunction(env, exports, "GetShaderDefault", &GetShaderDefault);
  AddFunction(env, exports, "GetTextureDefault", &GetTextureDefault);
  AddFunction(env, exports, "GetShapesTexture", &GetShapesTexture);
  AddFunction(env, exports, "GetShapesTextureRec", &GetShapesTextureRec);
  AddFunction(env, exports, "SetShapesTexture", &SetShapesTexture);
  AddFunction(env, exports, "GetShaderLocation", &GetShaderLocation);
  AddFunction(env, exports, "GetShaderLocationAttrib", &GetShaderLocationAttrib);
  AddFunction(env, exports, "SetShaderValue", &SetShaderValue);
  AddFunction(env, exports, "SetShaderValueV", &SetShaderValueV);
  AddFunction(env, exports, "SetShaderValueMatrix", &SetShaderValueMatrix);
  AddFunction(env, exports, "SetShaderValueTexture", &SetShaderValueTexture);
  AddFunction(env, exports, "SetMatrixProjection", &SetMatrixProjection);
  AddFunction(env, exports, "SetMatrixModelview", &SetMatrixModelview);
  AddFunction(env, exports, "GetMatrixModelview", &GetMatrixModelview);
  AddFunction(env, exports, "GetMatrixProjection", &GetMatrixProjection);
  AddFunction(env, exports, "GenTextureCubemap", &GenTextureCubemap);
  AddFunction(env, exports, "GenTextureIrradiance", &GenTextureIrradiance);
  AddFunction(env, exports, "GenTexturePrefilter", &GenTexturePrefilter);
  AddFunction(env, exports, "GenTextureBRDF", &GenTextureBRDF);
  AddFunction(env, exports, "BeginShaderMode", &BeginShaderMode);
  AddFunction(env, exports, "EndShaderMode", &EndShaderMode);
  AddFunction(env, exports, "BeginBlendMode", &BeginBlendMode);
  AddFunction(env, exports, "EndBlendMode", &EndBlendMode);
  AddFunction(env, exports, "InitVrSimulator", &InitVrSimulator);
  AddFunction(env, exports, "CloseVrSimulator", &CloseVrSimulator);
  // AddFunction(env, exports, "UpdateVrTracking", &UpdateVrTracking);
  AddFunction(env, exports, "SetVrConfiguration", &SetVrConfiguration);
  AddFunction(env, exports, "IsVrSimulatorReady", &IsVrSimulatorReady);
  AddFunction(env, exports, "ToggleVrMode", &ToggleVrMode);
  AddFunction(env, exports, "BeginVrDrawing", &BeginVrDrawing);
  AddFunction(env, exports, "EndVrDrawing", &EndVrDrawing);
  AddFunction(env, exports, "InitAudioDevice", &InitAudioDevice);
  AddFunction(env, exports, "CloseAudioDevice", &CloseAudioDevice);
  AddFunction(env, exports, "IsAudioDeviceReady", &IsAudioDeviceReady);
  AddFunction(env, exports, "SetMasterVolume", &SetMasterVolume);
  AddFunction(env, exports, "LoadWave", &LoadWave);
  AddFunction(env, exports, "LoadWaveFromMemory", &LoadWaveFromMemory);
  AddFunction(env, exports, "LoadSound", &LoadSound);
  AddFunction(env, exports, "LoadSoundFromWave", &LoadSoundFromWave);
  AddFunction(env, exports, "UpdateSound", &UpdateSound);
  AddFunction(env, exports, "UnloadWave", &UnloadWave);
  AddFunction(env, exports, "UnloadSound", &UnloadSound);
  AddFunction(env, exports, "ExportWave", &ExportWave);
  AddFunction(env, exports, "ExportWaveAsCode", &ExportWaveAsCode);
  AddFunction(env, exports, "PlaySound", &PlaySound);
  AddFunction(env, exports, "StopSound", &StopSound);
  AddFunction(env, exports, "PauseSound", &PauseSound);
  AddFunction(env, exports, "ResumeSound", &ResumeSound);
  AddFunction(env, exports, "PlaySoundMulti", &PlaySoundMulti);
  AddFunction(env, exports, "StopSoundMulti", &StopSoundMulti);
  AddFunction(env, exports, "GetSoundsPlaying", &GetSoundsPlaying);
  AddFunction(env, exports, "IsSoundPlaying", &IsSoundPlaying);
  AddFunction(env, exports, "SetSoundVolume", &SetSoundVolume);
  AddFunction(env, exports, "SetSoundPitch", &SetSoundPitch);
  AddFunction(env, exports, "WaveFormat", &WaveFormat);
  AddFunction(env, exports, "WaveCopy", &WaveCopy);
  AddFunction(env, exports, "WaveCrop", &WaveCrop);
  AddFunction(env, exports, "LoadWaveSamples", &LoadWaveSamples);
  AddFunction(env, exports, "UnloadWaveSamples", &UnloadWaveSamples);
  AddFunction(env, exports, "LoadMusicStream", &LoadMusicStream);
  AddFunction(env, exports, "UnloadMusicStream", &UnloadMusicStream);
  AddFunction(env, exports, "PlayMusicStream", &PlayMusicStream);
  AddFunction(env, exports, "UpdateMusicStream", &UpdateMusicStream);
  AddFunction(env, exports, "StopMusicStream", &StopMusicStream);
  AddFunction(env, exports, "PauseMusicStream", &PauseMusicStream);
  AddFunction(env, exports, "ResumeMusicStream", &ResumeMusicStream);
  AddFunction(env, exports, "IsMusicPlaying", &IsMusicPlaying);
  AddFunction(env, exports, "SetMusicVolume", &SetMusicVolume);
  AddFunction(env, exports, "SetMusicPitch", &SetMusicPitch);
  AddFunction(env, exports, "GetMusicTimeLength", &GetMusicTimeLength);
  AddFunction(env, exports, "GetMusicTimePlayed", &GetMusicTimePlayed);
  AddFunction(env, exports, "InitAudioStream", &InitAudioStream);
  AddFunction(env, exports, "UpdateAudioStream", &UpdateAudioStream);
  AddFunction(env, exports, "CloseAudioStream", &CloseAudioStream);
  AddFunction(env, exports, "IsAudioStreamProcessed", &IsAudioStreamProcessed);
  AddFunction(env, exports, "PlayAudioStream", &PlayAudioStream);
  AddFunction(env, exports, "PauseAudioStream", &PauseAudioStream);
  AddFunction(env, exports, "ResumeAudioStream", &ResumeAudioStream);
  AddFunction(env, exports, "IsAudioStreamPlaying", &IsAudioStreamPlaying);
  AddFunction(env, exports, "StopAudioStream", &StopAudioStream);
  AddFunction(env, exports, "SetAudioStreamVolume", &SetAudioStreamVolume);
  AddFunction(env, exports, "SetAudioStreamPitch", &SetAudioStreamPitch);
  AddFunction(env, exports, "SetAudioStreamBufferSizeDefault", &SetAudioStreamBufferSizeDefault);
}

void node_raylib_bindings(Napi::Env& env, Napi::Object& exports) {
  node_raylib_bindings_defines(env, exports);
  node_raylib_bindings_functions(env, exports);
}

#endif
