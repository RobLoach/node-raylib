#ifndef RAYLIB_CONSTANTS
#define RAYLIB_CONSTANTS

#include <emscripten/bind.h>
#include <raylib-cpp.hpp>

using namespace emscripten;

void raylib_constants() {
    constant("LIGHTGRAY", LIGHTGRAY);
    constant("GRAY", GRAY);
    constant("DARKGRAY", DARKGRAY);
    constant("YELLOW", YELLOW);
    constant("GOLD", GOLD);
    constant("ORANGE", ORANGE);
    constant("PINK", PINK);
    constant("RED", RED);
    constant("MAROON", MAROON);
    constant("GREEN", GREEN);
    constant("LIME", LIME);
    constant("DARKGREEN", DARKGREEN);
    constant("SKYBLUE", SKYBLUE);
    constant("BLUE", BLUE);
    constant("DARKBLUE", DARKBLUE);
    constant("PURPLE", PURPLE);
    constant("VIOLET", VIOLET);
    constant("DARKPURPLE", DARKPURPLE);
    constant("BEIGE", BEIGE);
    constant("BROWN", BROWN);
    constant("DARKBROWN", DARKBROWN);
    constant("WHITE", WHITE);
    constant("BLACK", BLACK);
    constant("BLANK", BLANK);
    constant("MAGENTA", MAGENTA);
    constant("RAYWHITE", RAYWHITE);

    constant("FLAG_VSYNC_HINT", FLAG_VSYNC_HINT);
    constant("FLAG_FULLSCREEN_MODE", FLAG_FULLSCREEN_MODE);
    constant("FLAG_WINDOW_RESIZABLE", FLAG_WINDOW_RESIZABLE);
    constant("FLAG_WINDOW_UNDECORATED", FLAG_WINDOW_UNDECORATED);
    constant("FLAG_WINDOW_HIDDEN", FLAG_WINDOW_HIDDEN);
    constant("FLAG_WINDOW_MINIMIZED", FLAG_WINDOW_MINIMIZED);
    constant("FLAG_WINDOW_MAXIMIZED", FLAG_WINDOW_MAXIMIZED);
    constant("FLAG_WINDOW_UNFOCUSED", FLAG_WINDOW_UNFOCUSED);
    constant("FLAG_WINDOW_TOPMOST", FLAG_WINDOW_TOPMOST);
    constant("FLAG_WINDOW_ALWAYS_RUN", FLAG_WINDOW_ALWAYS_RUN);
    constant("FLAG_WINDOW_TRANSPARENT", FLAG_WINDOW_TRANSPARENT);
    constant("FLAG_WINDOW_HIGHDPI", FLAG_WINDOW_HIGHDPI);
    constant("FLAG_MSAA_4X_HINT", FLAG_MSAA_4X_HINT);
    constant("FLAG_INTERLACED_HINT", FLAG_INTERLACED_HINT);
    constant("LOG_ALL", LOG_ALL);
    constant("LOG_TRACE", LOG_TRACE);
    constant("LOG_DEBUG", LOG_DEBUG);
    constant("LOG_INFO", LOG_INFO);
    constant("LOG_WARNING", LOG_WARNING);
    constant("LOG_ERROR", LOG_ERROR);
    constant("LOG_FATAL", LOG_FATAL);
    constant("LOG_NONE", LOG_NONE);
    constant("KEY_APOSTROPHE", KEY_APOSTROPHE);
    constant("KEY_COMMA", KEY_COMMA);
    constant("KEY_MINUS", KEY_MINUS);
    constant("KEY_PERIOD", KEY_PERIOD);
    constant("KEY_SLASH", KEY_SLASH);
    constant("KEY_ZERO", KEY_ZERO);
    constant("KEY_ONE", KEY_ONE);
    constant("KEY_TWO", KEY_TWO);
    constant("KEY_THREE", KEY_THREE);
    constant("KEY_FOUR", KEY_FOUR);
    constant("KEY_FIVE", KEY_FIVE);
    constant("KEY_SIX", KEY_SIX);
    constant("KEY_SEVEN", KEY_SEVEN);
    constant("KEY_EIGHT", KEY_EIGHT);
    constant("KEY_NINE", KEY_NINE);
    constant("KEY_SEMICOLON", KEY_SEMICOLON);
    constant("KEY_EQUAL", KEY_EQUAL);
    constant("KEY_A", KEY_A);
    constant("KEY_B", KEY_B);
    constant("KEY_C", KEY_C);
    constant("KEY_D", KEY_D);
    constant("KEY_E", KEY_E);
    constant("KEY_F", KEY_F);
    constant("KEY_G", KEY_G);
    constant("KEY_H", KEY_H);
    constant("KEY_I", KEY_I);
    constant("KEY_J", KEY_J);
    constant("KEY_K", KEY_K);
    constant("KEY_L", KEY_L);
    constant("KEY_M", KEY_M);
    constant("KEY_N", KEY_N);
    constant("KEY_O", KEY_O);
    constant("KEY_P", KEY_P);
    constant("KEY_Q", KEY_Q);
    constant("KEY_R", KEY_R);
    constant("KEY_S", KEY_S);
    constant("KEY_T", KEY_T);
    constant("KEY_U", KEY_U);
    constant("KEY_V", KEY_V);
    constant("KEY_W", KEY_W);
    constant("KEY_X", KEY_X);
    constant("KEY_Y", KEY_Y);
    constant("KEY_Z", KEY_Z);
    constant("KEY_SPACE", KEY_SPACE);
    constant("KEY_ESCAPE", KEY_ESCAPE);
    constant("KEY_ENTER", KEY_ENTER);
    constant("KEY_TAB", KEY_TAB);
    constant("KEY_BACKSPACE", KEY_BACKSPACE);
    constant("KEY_INSERT", KEY_INSERT);
    constant("KEY_DELETE", KEY_DELETE);
    constant("KEY_RIGHT", KEY_RIGHT);
    constant("KEY_LEFT", KEY_LEFT);
    constant("KEY_DOWN", KEY_DOWN);
    constant("KEY_UP", KEY_UP);
    constant("KEY_PAGE_UP", KEY_PAGE_UP);
    constant("KEY_PAGE_DOWN", KEY_PAGE_DOWN);
    constant("KEY_HOME", KEY_HOME);
    constant("KEY_END", KEY_END);
    constant("KEY_CAPS_LOCK", KEY_CAPS_LOCK);
    constant("KEY_SCROLL_LOCK", KEY_SCROLL_LOCK);
    constant("KEY_NUM_LOCK", KEY_NUM_LOCK);
    constant("KEY_PRINT_SCREEN", KEY_PRINT_SCREEN);
    constant("KEY_PAUSE", KEY_PAUSE);
    constant("KEY_F1", KEY_F1);
    constant("KEY_F2", KEY_F2);
    constant("KEY_F3", KEY_F3);
    constant("KEY_F4", KEY_F4);
    constant("KEY_F5", KEY_F5);
    constant("KEY_F6", KEY_F6);
    constant("KEY_F7", KEY_F7);
    constant("KEY_F8", KEY_F8);
    constant("KEY_F9", KEY_F9);
    constant("KEY_F10", KEY_F10);
    constant("KEY_F11", KEY_F11);
    constant("KEY_F12", KEY_F12);
    constant("KEY_LEFT_SHIFT", KEY_LEFT_SHIFT);
    constant("KEY_LEFT_CONTROL", KEY_LEFT_CONTROL);
    constant("KEY_LEFT_ALT", KEY_LEFT_ALT);
    constant("KEY_LEFT_SUPER", KEY_LEFT_SUPER);
    constant("KEY_RIGHT_SHIFT", KEY_RIGHT_SHIFT);
    constant("KEY_RIGHT_CONTROL", KEY_RIGHT_CONTROL);
    constant("KEY_RIGHT_ALT", KEY_RIGHT_ALT);
    constant("KEY_RIGHT_SUPER", KEY_RIGHT_SUPER);
    constant("KEY_KB_MENU", KEY_KB_MENU);
    constant("KEY_LEFT_BRACKET", KEY_LEFT_BRACKET);
    constant("KEY_BACKSLASH", KEY_BACKSLASH);
    constant("KEY_RIGHT_BRACKET", KEY_RIGHT_BRACKET);
    constant("KEY_GRAVE", KEY_GRAVE);
    constant("KEY_KP_0", KEY_KP_0);
    constant("KEY_KP_1", KEY_KP_1);
    constant("KEY_KP_2", KEY_KP_2);
    constant("KEY_KP_3", KEY_KP_3);
    constant("KEY_KP_4", KEY_KP_4);
    constant("KEY_KP_5", KEY_KP_5);
    constant("KEY_KP_6", KEY_KP_6);
    constant("KEY_KP_7", KEY_KP_7);
    constant("KEY_KP_8", KEY_KP_8);
    constant("KEY_KP_9", KEY_KP_9);
    constant("KEY_KP_DECIMAL", KEY_KP_DECIMAL);
    constant("KEY_KP_DIVIDE", KEY_KP_DIVIDE);
    constant("KEY_KP_MULTIPLY", KEY_KP_MULTIPLY);
    constant("KEY_KP_SUBTRACT", KEY_KP_SUBTRACT);
    constant("KEY_KP_ADD", KEY_KP_ADD);
    constant("KEY_KP_ENTER", KEY_KP_ENTER);
    constant("KEY_KP_EQUAL", KEY_KP_EQUAL);
    constant("KEY_BACK", KEY_BACK);
    constant("KEY_MENU", KEY_MENU);
    constant("KEY_VOLUME_UP", KEY_VOLUME_UP);
    constant("KEY_VOLUME_DOWN", KEY_VOLUME_DOWN);
    constant("MOUSE_LEFT_BUTTON", MOUSE_LEFT_BUTTON);
    constant("MOUSE_RIGHT_BUTTON", MOUSE_RIGHT_BUTTON);
    constant("MOUSE_MIDDLE_BUTTON", MOUSE_MIDDLE_BUTTON);
    constant("MOUSE_CURSOR_DEFAULT", MOUSE_CURSOR_DEFAULT);
    constant("MOUSE_CURSOR_ARROW", MOUSE_CURSOR_ARROW);
    constant("MOUSE_CURSOR_IBEAM", MOUSE_CURSOR_IBEAM);
    constant("MOUSE_CURSOR_CROSSHAIR", MOUSE_CURSOR_CROSSHAIR);
    constant("MOUSE_CURSOR_POINTING_HAND", MOUSE_CURSOR_POINTING_HAND);
    constant("MOUSE_CURSOR_RESIZE_EW", MOUSE_CURSOR_RESIZE_EW);
    constant("MOUSE_CURSOR_RESIZE_NS", MOUSE_CURSOR_RESIZE_NS);
    constant("MOUSE_CURSOR_RESIZE_NWSE", MOUSE_CURSOR_RESIZE_NWSE);
    constant("MOUSE_CURSOR_RESIZE_NESW", MOUSE_CURSOR_RESIZE_NESW);
    constant("MOUSE_CURSOR_RESIZE_ALL", MOUSE_CURSOR_RESIZE_ALL);
    constant("MOUSE_CURSOR_NOT_ALLOWED", MOUSE_CURSOR_NOT_ALLOWED);
    constant("GAMEPAD_BUTTON_UNKNOWN", GAMEPAD_BUTTON_UNKNOWN);
    constant("GAMEPAD_BUTTON_LEFT_FACE_UP", GAMEPAD_BUTTON_LEFT_FACE_UP);
    constant("GAMEPAD_BUTTON_LEFT_FACE_RIGHT", GAMEPAD_BUTTON_LEFT_FACE_RIGHT);
    constant("GAMEPAD_BUTTON_LEFT_FACE_DOWN", GAMEPAD_BUTTON_LEFT_FACE_DOWN);
    constant("GAMEPAD_BUTTON_LEFT_FACE_LEFT", GAMEPAD_BUTTON_LEFT_FACE_LEFT);
    constant("GAMEPAD_BUTTON_RIGHT_FACE_UP", GAMEPAD_BUTTON_RIGHT_FACE_UP);
    constant("GAMEPAD_BUTTON_RIGHT_FACE_RIGHT", GAMEPAD_BUTTON_RIGHT_FACE_RIGHT);
    constant("GAMEPAD_BUTTON_RIGHT_FACE_DOWN", GAMEPAD_BUTTON_RIGHT_FACE_DOWN);
    constant("GAMEPAD_BUTTON_RIGHT_FACE_LEFT", GAMEPAD_BUTTON_RIGHT_FACE_LEFT);
    constant("GAMEPAD_BUTTON_LEFT_TRIGGER_1", GAMEPAD_BUTTON_LEFT_TRIGGER_1);
    constant("GAMEPAD_BUTTON_LEFT_TRIGGER_2", GAMEPAD_BUTTON_LEFT_TRIGGER_2);
    constant("GAMEPAD_BUTTON_RIGHT_TRIGGER_1", GAMEPAD_BUTTON_RIGHT_TRIGGER_1);
    constant("GAMEPAD_BUTTON_RIGHT_TRIGGER_2", GAMEPAD_BUTTON_RIGHT_TRIGGER_2);
    constant("GAMEPAD_BUTTON_MIDDLE_LEFT", GAMEPAD_BUTTON_MIDDLE_LEFT);
    constant("GAMEPAD_BUTTON_MIDDLE", GAMEPAD_BUTTON_MIDDLE);
    constant("GAMEPAD_BUTTON_MIDDLE_RIGHT", GAMEPAD_BUTTON_MIDDLE_RIGHT);
    constant("GAMEPAD_BUTTON_LEFT_THUMB", GAMEPAD_BUTTON_LEFT_THUMB);
    constant("GAMEPAD_BUTTON_RIGHT_THUMB", GAMEPAD_BUTTON_RIGHT_THUMB);
    constant("GAMEPAD_AXIS_LEFT_X", GAMEPAD_AXIS_LEFT_X);
    constant("GAMEPAD_AXIS_LEFT_Y", GAMEPAD_AXIS_LEFT_Y);
    constant("GAMEPAD_AXIS_RIGHT_X", GAMEPAD_AXIS_RIGHT_X);
    constant("GAMEPAD_AXIS_RIGHT_Y", GAMEPAD_AXIS_RIGHT_Y);
    constant("GAMEPAD_AXIS_LEFT_TRIGGER", GAMEPAD_AXIS_LEFT_TRIGGER);
    constant("GAMEPAD_AXIS_RIGHT_TRIGGER", GAMEPAD_AXIS_RIGHT_TRIGGER);
    constant("PIXELFORMAT_UNCOMPRESSED_GRAYSCALE", PIXELFORMAT_UNCOMPRESSED_GRAYSCALE);
    constant("PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA", PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA);
    constant("PIXELFORMAT_UNCOMPRESSED_R5G6B5", PIXELFORMAT_UNCOMPRESSED_R5G6B5);
    constant("PIXELFORMAT_UNCOMPRESSED_R8G8B8", PIXELFORMAT_UNCOMPRESSED_R8G8B8);
    constant("PIXELFORMAT_UNCOMPRESSED_R5G5B5A1", PIXELFORMAT_UNCOMPRESSED_R5G5B5A1);
    constant("PIXELFORMAT_UNCOMPRESSED_R4G4B4A4", PIXELFORMAT_UNCOMPRESSED_R4G4B4A4);
    constant("PIXELFORMAT_UNCOMPRESSED_R8G8B8A8", PIXELFORMAT_UNCOMPRESSED_R8G8B8A8);
    constant("PIXELFORMAT_UNCOMPRESSED_R32", PIXELFORMAT_UNCOMPRESSED_R32);
    constant("PIXELFORMAT_UNCOMPRESSED_R32G32B32", PIXELFORMAT_UNCOMPRESSED_R32G32B32);
    constant("PIXELFORMAT_UNCOMPRESSED_R32G32B32A32", PIXELFORMAT_UNCOMPRESSED_R32G32B32A32);
    constant("FONT_DEFAULT", FONT_DEFAULT);
    constant("FONT_BITMAP", FONT_BITMAP);
    constant("FONT_SDF", FONT_SDF);
    constant("BLEND_ALPHA", BLEND_ALPHA);
    constant("BLEND_ADDITIVE", BLEND_ADDITIVE);
    constant("BLEND_MULTIPLIED", BLEND_MULTIPLIED);
    constant("BLEND_ADD_COLORS", BLEND_ADD_COLORS);
    constant("BLEND_SUBTRACT_COLORS", BLEND_SUBTRACT_COLORS);
    constant("BLEND_CUSTOM", BLEND_CUSTOM);
    constant("GESTURE_NONE", GESTURE_NONE);
    constant("GESTURE_TAP", GESTURE_TAP);
    constant("GESTURE_DOUBLETAP", GESTURE_DOUBLETAP);
    constant("GESTURE_HOLD", GESTURE_HOLD);
    constant("GESTURE_DRAG", GESTURE_DRAG);
    constant("GESTURE_SWIPE_RIGHT", GESTURE_SWIPE_RIGHT);
    constant("GESTURE_SWIPE_LEFT", GESTURE_SWIPE_LEFT);
    constant("GESTURE_SWIPE_UP", GESTURE_SWIPE_UP);
    constant("GESTURE_SWIPE_DOWN", GESTURE_SWIPE_DOWN);
    constant("GESTURE_PINCH_IN", GESTURE_PINCH_IN);
    constant("GESTURE_PINCH_OUT", GESTURE_PINCH_OUT);
    constant("CAMERA_CUSTOM", CAMERA_CUSTOM);
    constant("CAMERA_FREE", CAMERA_FREE);
    constant("CAMERA_ORBITAL", CAMERA_ORBITAL);
    constant("CAMERA_FIRST_PERSON", CAMERA_FIRST_PERSON);
    constant("CAMERA_THIRD_PERSON", CAMERA_THIRD_PERSON);
    constant("CAMERA_PERSPECTIVE", CAMERA_PERSPECTIVE);
    constant("CAMERA_ORTHOGRAPHIC", CAMERA_ORTHOGRAPHIC);
}

#endif
