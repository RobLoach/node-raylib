import { Color } from "./types/colors";
import { Vector2, Vector3, Vector4, Ray, Matrix } from "./types/maths";
import { Camera, Camera2D, Camera3D } from "./types/camera";
import { Image, RenderTexture2D } from "./types/texture";
import { TraceLogCallback } from "./types/misc";
export declare const InitWindow: (width: number, height: number, title: string) => void;
export declare const WindowShouldClose: () => boolean;
export declare const CloseWindow: () => void;
export declare const IsWindowReady: () => boolean;
export declare const IsWindowMinimized: () => boolean;
export declare const IsWindowResized: () => boolean;
export declare const IsWindowHidden: () => boolean;
export declare const ToggleFullscreen: () => void;
export declare const UnhideWindow: () => void;
export declare const HideWindow: () => void;
export declare const SetWindowIcon: (image: Image) => void;
export declare const SetWindowTitle: (title: string) => void;
export declare const SetWindowPosition: (x: number, y: number) => void;
export declare const SetWindowMonitor: (monitor: number) => void;
export declare const SetWindowMinSize: (width: number, height: number) => void;
export declare const SetWindowSize: (width: number, height: number) => void;
export declare const GetWindowHandle: () => void;
export declare const GetScreenWidth: () => number;
export declare const GetScreenHeight: () => number;
export declare const GetMonitorCount: () => number;
export declare const GetMonitorWidth: (monitor: number) => number;
export declare const GetMonitorHeight: (monitor: number) => number;
export declare const GetMonitorPhysicalWidth: (monitor: number) => number;
export declare const GetMonitorPhysicalHeight: (monitor: number) => number;
export declare const GetMonitorName: (monitor: number) => string;
export declare const GetClipboardText: () => string;
export declare const SetClipboardText: (text: string) => void;
export declare const ShowCursor: () => void;
export declare const HideCursor: () => void;
export declare const IsCursorHidden: () => boolean;
export declare const EnableCursor: () => void;
export declare const DisableCursor: () => void;
export declare const ClearBackground: (color: Color) => void;
export declare const BeginDrawing: () => void;
export declare const EndDrawing: () => void;
export declare const BeginMode2D: (camera: Camera2D) => void;
export declare const EndMode2D: () => void;
export declare const BeginMode3D: (camera: Camera3D) => void;
export declare const EndMode3D: () => void;
export declare const BeginTextureMode: (target: RenderTexture2D) => void;
export declare const EndTextureMode: () => void;
export declare const GetMouseRay: (mousePosition: Vector2, camera: Camera) => Ray;
export declare const GetWorldToScreen: (position: Vector3, camera: Camera) => Vector2;
export declare const GetCameraMatrix: (camera: Camera) => Matrix;
export declare const SetTargetFPS: (fps: number) => void;
export declare const GetFPS: () => number;
export declare const GetFrameTime: () => number;
export declare const GetTime: () => number;
export declare const ColorToInt: (color: Color) => number;
export declare const ColorNormalize: (color: Color) => Vector4;
export declare const ColorToHSV: (color: Color) => Vector3;
export declare const ColorFromHSV: (hsv: Vector3) => Color;
export declare const GetColor: (hexValue: number) => Color;
export declare const Fade: (color: Color, alpha: number) => Color;
export declare const SetConfigFlags: (flags: number) => void;
export declare const SetTraceLogLevel: (logType: number) => void;
export declare const SetTraceLogExit: (logType: number) => void;
export declare const SetTraceLogCallback: (callback: TraceLogCallback) => void;
export declare const TraceLog: (logType: number, text: string, ...args: any) => void;
export declare const TakeScreenshot: (fileName: string) => void;
export declare const GetRandomValue: (min: number, max: number) => number;
export declare const FileExists: (fileName: string) => boolean;
export declare const IsFileExtension: (fileName: string, ext: string) => boolean;
export declare const GetExtension: (fileName: string) => string;
export declare const GetFileName: (filePath: string) => string;
export declare const GetFileNameWithoutExt: (filePath: string) => string;
export declare const GetDirectoryPath: (fileName: string) => string;
export declare const GetWorkingDirectory: () => string;
export declare const GetDirectoryFiles: (dirPath: string, count: number) => number;
export declare const ClearDirectoryFiles: () => void;
export declare const ChangeDirectory: (dir: string) => boolean;
export declare const IsFileDropped: () => boolean;
export declare const GetDroppedFiles: (count: number) => number;
export declare const ClearDroppedFiles: () => void;
export declare const GetFileModTime: (fileName: string) => number;
export declare const StorageSaveValue: (position: number, value: number) => void;
export declare const StorageLoadValue: (position: number) => number;
export declare const OpenURL: (url: string) => void;
export declare const IsKeyPressed: (key: number) => boolean;
export declare const IsKeyDown: (key: number) => boolean;
export declare const IsKeyReleased: (key: number) => boolean;
export declare const IsKeyUp: (key: number) => boolean;
export declare const GetKeyPressed: () => number;
export declare const SetExitKey: (key: number) => void;
export declare const IsGamepadAvailable: (gamepad: number) => boolean;
export declare const IsGamepadName: (gamepad: number, name: string) => boolean;
export declare const GetGamepadName: (gamepad: number) => string;
export declare const IsGamepadButtonPressed: (gamepad: number, button: number) => boolean;
export declare const IsGamepadButtonDown: (gamepad: number, button: number) => boolean;
export declare const IsGamepadButtonReleased: (gamepad: number, button: number) => boolean;
export declare const IsGamepadButtonUp: (gamepad: number, button: number) => boolean;
export declare const GetGamepadButtonPressed: () => number;
export declare const GetGamepadAxisCount: (gamepad: number) => number;
export declare const GetGamepadAxisMovement: (gamepad: number, axis: number) => number;
export declare const IsMouseButtonPressed: (button: number) => boolean;
export declare const IsMouseButtonDown: (button: number) => boolean;
export declare const IsMouseButtonReleased: (button: number) => boolean;
export declare const IsMouseButtonUp: (button: number) => boolean;
export declare const GetMouseX: () => number;
export declare const GetMouseY: () => number;
export declare const GetMousePosition: () => Vector2;
export declare const SetMousePosition: (x: number, y: number) => void;
export declare const SetMouseOffset: (offsetX: number, offsetY: number) => void;
export declare const SetMouseScale: (scaleX: number, scaleY: number) => void;
export declare const GetMouseWheelMove: () => number;
export declare const GetTouchX: () => number;
export declare const GetTouchY: () => number;
export declare const GetTouchPosition: (index: number) => Vector2;
export declare const SetGesturesEnabled: (gestureFlags: number) => void;
export declare const IsGestureDetected: (gesture: number) => boolean;
export declare const GetGestureDetected: () => number;
export declare const GetTouchPointsCount: () => number;
export declare const GetGestureHoldDuration: () => number;
export declare const GetGestureDragVector: () => Vector2;
export declare const GetGestureDragAngle: () => number;
export declare const GetGesturePinchVector: () => Vector2;
export declare const GetGesturePinchAngle: () => number;
export declare const SetCameraMode: (camera: Camera, mode: number) => void;
export declare const UpdateCamera: (camera: Camera) => void;
export declare const SetCameraPanControl: (panKey: number) => void;
export declare const SetCameraAltControl: (altKey: number) => void;
export declare const SetCameraSmoothZoomControl: (szKey: number) => void;
export declare const SetCameraMoveControls: (frontKey: number, backKey: number, rightKey: number, leftKey: number, upKey: number, downKey: number) => void;
